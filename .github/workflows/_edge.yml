name: Deploy Edge Network

on:
  workflow_call:
    inputs:
      skip-check:
        required: false
        type: boolean
      environment:
        required: true
        type: string
    secrets:
      CF_API_TOKEN:
        required: true
      CF_ACCOUNT_ID:
        required: true
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      skip-check:
        description: 'Skip check'
        required: false
        default: true
        type: boolean

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      edge: ${{ steps.filter.outputs.edge }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            edge:
              - 'apps/edge/**'

  deploy:
    needs: ${{ (inputs.skip-check && null) || 'changes' }}
    runs-on: ubuntu-latest
    if: ${{ inputs.skip-check || needs.changes.outputs.edge == 'true' }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - uses: actions/cache@v3.0.8
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-v${{ matrix.node-version }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - run: yarn install --immutable

      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: publish --env ${{ inputs.environment }}
          workingDirectory: apps/edge
