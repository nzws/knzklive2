name: Build images

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      FLY_API_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      tag:
        description: 'Docker tag (staging→staging, production→latest)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - latest
      skip-check:
        description: 'Skip check'
        required: false
        default: true
        type: boolean

jobs:
  changes:
    if: ${{ !inputs.skip-check }}
    runs-on: ubuntu-latest
    outputs:
      server: ${{ steps.filter.outputs.server }}
      push: ${{ steps.filter.outputs.push }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            server:
              - 'apps/server/**'
            push:
              - 'apps/push/**'

  build-server:
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ inputs.skip-check || needs.changes.outputs.server == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        env:
          DOCKER_BUILDKIT: 1
        with:
          context: .
          file: ./apps/server/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ghcr.io/nzws/knzklive2-server:${{ inputs.tag }}
          cache-from: type=registry,ref=ghcr.io/nzws/knzklive2-server:${{ inputs.tag }}
          cache-to: type=inline

  deploy-server:
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --config ./infra/fly/${{ inputs.environment }}.toml ./
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  build-push:
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ inputs.skip-check || needs.changes.outputs.push == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        env:
          DOCKER_BUILDKIT: 1
        with:
          context: .
          file: ./apps/push/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v8
          tags: ghcr.io/nzws/knzklive2-push:${{ inputs.tag }}
          cache-from: type=registry,ref=ghcr.io/nzws/knzklive2-push:${{ inputs.tag }}
          cache-to: type=inline
