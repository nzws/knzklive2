version: 2.1

executors:
  arm:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    resource_class: arm.medium

orbs:
  node: circleci/node@5.1.0

jobs:
  setup:
    executor: arm
    steps:
      - checkout
      - node/install:
          install-yarn: true
      # https://qiita.com/nouernet/items/ffe0615c14147863de7a
      - run: echo "\$nrconf{restart} = 'a';" | sudo tee /etc/needrestart/conf.d/50local.conf
      # https://github.com/nodejs/node-gyp/issues/2869
      - run: pip install setuptools
      - run: sudo apt-get update -y
      # https://github.com/Automattic/node-canvas
      - run: sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - run: PUPPETEER_SKIP_DOWNLOAD=1 yarn install --immutable
      - run: yarn workspace server prisma generate
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  server-build-and-publish:
    executor: arm
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker build -t ghcr.io/nzws/knzklive2-server:$TAG-arm64 -f ./apps/server/Dockerfile .
      - run: echo $GHCR_TOKEN | docker login ghcr.io -u $GHCR_USER --password-stdin
      - run: docker push ghcr.io/nzws/knzklive2-server:$TAG-arm64

  push-build-and-publish:
    executor: arm
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker build -t ghcr.io/nzws/knzklive2-push:$TAG-arm64 -f ./apps/push/Dockerfile .
      - run: echo $GHCR_TOKEN | docker login ghcr.io -u $GHCR_USER --password-stdin
      - run: docker push ghcr.io/nzws/knzklive2-push:$TAG-arm64

  video-build-and-publish:
    executor: arm
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker build -t ghcr.io/nzws/knzklive2-video:$TAG-arm64 -f ./apps/video/Dockerfile .
      - run: echo $GHCR_TOKEN | docker login ghcr.io -u $GHCR_USER --password-stdin
      - run: docker push ghcr.io/nzws/knzklive2-video:$TAG-arm64

workflows:
  staging:
    jobs:
      - setup:
          filters:
            branches:
              only: main

      - server-build-and-publish:
          pre-steps:
            - run: echo 'export TAG=staging' >> "$BASH_ENV"
          requires:
            - setup

      - push-build-and-publish:
          pre-steps:
            - run: echo 'export TAG=staging' >> "$BASH_ENV"
          requires:
            - setup

      - video-build-and-publish:
          pre-steps:
            - run: echo 'export TAG=staging' >> "$BASH_ENV"
          requires:
            - setup

  production:
    jobs:
      - setup:
          filters:
            branches:
              only: production

      - server-build-and-publish:
          pre-steps:
            - run: echo 'export TAG=latest' >> "$BASH_ENV"
          requires:
            - setup

      - push-build-and-publish:
          pre-steps:
            - run: echo 'export TAG=latest' >> "$BASH_ENV"
          requires:
            - setup

      - video-build-and-publish:
          pre-steps:
            - run: echo 'export TAG=latest' >> "$BASH_ENV"
          requires:
            - setup
